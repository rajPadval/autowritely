import { NextResponse } from "next/server";
import openai from "@/helpers/openai";
import BlogPost from "@/DB/models/BlogPost";

export async function POST(request) {
  try {
    const reqBody = await request.json();
    const { topic } = reqBody;

    console.log("Topic:", topic);

    const structure = {
      title: "Title",
      desc: "Description",
    };

    const completion = await openai.createChatCompletion({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content:
            "Pretend you're a content writer, be energetic and full of charisma. Make the content easy for the viewer to understand, also include some lines of humour in the content",
        },
        {
          role: "user",
          content: `generate a blog on the topic ${topic} with the following attributes : 
          - title
          - description
          Format the response in the following JSON object : ${JSON.stringify(
            structure
          )}
          `,
        },
      ],
      max_tokens: 200,
    });

    if (!completion?.data?.choices?.[0]?.message?.content) {
      throw new Error("No content generated by GPT-3");
    }

    // Extract the generated response from GPT-3
    const response = JSON.parse(completion.data.choices[0].message.content);

    // Create a new blog entry using the extracted title and content
    const newBlog = new BlogPost({
      title: response.title,
      desc: response.desc,
    });

    // Save the new blog entry to MongoDB
    await newBlog.save();

    return NextResponse.json({ response });
  } catch (error) {
    console.error("Error generating blog content:", error);
    return NextResponse.json({ error: "Internal server error" });
  }
}