import { NextResponse } from "next/server";
import openai from "@/helpers/openai";
import BlogPost from "@/DB/models/BlogPost";

export async function POST(request) {
  try {
    const reqBody = await request.json();
    const { topic } = reqBody;

    console.log("Topic:", topic);

    const structure = {
      title: "Title",
      desc: "Description",
    };

    const completion = await openai.createChatCompletion({
      model: "gpt-3.5-turbo",
      messages: [
        {
          role: "system",
          content:
            "Pretend you're a content writer, be energetic and full of charisma. Make the content easy for the viewer to understand, also include some lines of humour in the content",
        },
        {
          role: "user",
          content: `generate a blog on the topic ${topic} with the following attributes : 
          - title
          - description
          Format the response properly in the following JSON object : ${JSON.stringify(
            structure
          )}
          `,
        },
      ],
      max_tokens: 200,
    });

    if (!completion?.data?.choices?.[0]?.message?.content) {
      throw new Error("No content generated by GPT-3");
    }

    let response;
    // Extract the generated response from GPT-3
    try {
      response = JSON.parse(completion.data.choices[0].message.content);
      structure.title = response.title;
      structure.desc = response.desc;
    } catch (parseError) {
      console.error("Error parsing JSON:", parseError);
      console.log(
        "Response Content:",
        completion.data.choices[0].message.content
      );
    }

    try {
      const postRes = await fetch("http://localhost:3000/api/postBlogs", {
        method: "POST",
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify(structure),
      });

      const successMsg = await postRes.json();
      return NextResponse.json({ structure, successMsg });
    } catch (error) {
      console.log(error);
    }
  } catch (error) {
    console.error("Error generating blog content:", error);
    return NextResponse.json({ error: "Internal server error" });
  }
}
